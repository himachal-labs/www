---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
}

const { 
  title, 
  description = "VastSilicon builds cognitive infrastructure for human flourishing. Stop guessing. Start knowing.",
  image = "/assets/vast_silicon_logo.png",
  canonical
} = Astro.props;

const siteUrl = Astro.site ?? 'https://vastsilicon.com';
const canonicalURL = canonical ?? new URL(Astro.url.pathname, siteUrl);
const socialImage = new URL(image, siteUrl);
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
  <!-- Essential Meta Tags -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  
  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />
  <link rel="canonical" href={canonicalURL} />
  
  <!-- Favicon -->
  <link rel="icon" type="image/x-icon" href="/assets/favicon.ico" />
  <link rel="apple-touch-icon" href="/assets/vast_silicon_logo.png" />
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={socialImage} />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={socialImage} />
  
  <!-- Performance Optimization -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link rel="dns-prefetch" href="https://apps.apple.com" />
  
  <!-- Import global styles in head for better performance -->
  <link rel="stylesheet" href="/src/styles/globals.css" />
  
  <!-- Critical CSS will be inlined by Astro -->
  <style>
    /* Critical above-the-fold styles */
    body { margin: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; }
    .hero-loading { min-height: 60vh; display: flex; align-items: center; justify-content: center; }
  </style>
</head>

<body>
  <!-- Skip to main content for accessibility -->
  <a href="#main-content" class="skip-link">Skip to main content</a>
  
  <!-- Main content wrapper -->
  <div id="app" class="min-h-screen flex flex-col">
    <slot />
  </div>
  
  
  <!-- Service Worker Registration -->
  <script>
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/sw.js')
          .catch(() => {
            // Fail silently - SW is enhancement, not requirement
          });
      });
    }
  </script>
  
  <!-- Performance monitoring -->
  <script>
    // Web Vitals monitoring (for performance budget enforcement)
    if (typeof window !== 'undefined') {
      // Track loading performance
      window.addEventListener('load', () => {
        const navigation = performance.getEntriesByType('navigation')[0];
        if (navigation && navigation.loadEventEnd > 1000) {
          console.warn('Page load time exceeded 1s target:', navigation.loadEventEnd);
        }
      });
      
      // Track layout shifts
      let cumulativeLayoutShift = 0;
      new PerformanceObserver((list) => {
        for (const entry of list.getEntries()) {
          if (!entry.hadRecentInput) {
            cumulativeLayoutShift += entry.value;
          }
        }
        if (cumulativeLayoutShift > 0.1) {
          console.warn('CLS exceeded 0.1 target:', cumulativeLayoutShift);
        }
      }).observe({ type: 'layout-shift', buffered: true });
    }
  </script>
</body>
</html>